<?php

/**
 * @file
 * Contains the .install file for the islandora_riprap module.
 */

/**
 * Implements hook_requirements().
 */
function islandora_riprap_requirements($phase) {
  $requirements = [];
  $riprap_utils = \Drupal::service('islandora_riprap.riprap');

  if ($phase == 'runtime') {
    $config = \Drupal::config('islandora_riprap.settings');
    $mode = $config->get('riprap_mode');

    // If using Riprap as a remote microserive,
    // check whether Riprap's endpoint is available.
    if ($mode == 'remote') {
      $riprap_endpoint = $config->get('riprap_rest_endpoint');

      $riprap_response_code = 0;
      try {
        $client = \Drupal::httpClient();
        // Assumes Riprap requires no authentication
        // (e.g., it's behind the Symfony or other firewall).
        $response = $client->request('HEAD', $riprap_endpoint);
        $riprap_response_code = $response->getStatusCode();
      }
      catch (Exception $e) {
        \Drupal::logger('islandora_riprap')->error($e->getMessage());
      }
      finally {
        if ($riprap_response_code == 200) {
          $requirements['islandora_riprap_microservice_available'] = [
            'title' => t("Islandora Riprap"),
            'description' => t("Riprap is running at @endpoint. @chart_link.", ['@endpoint' => $riprap_endpoint, '@chart_link' => $riprap_utils->getLinkToFailedFixityEventsReport()]),
            'severity' => REQUIREMENT_INFO,
          ];
        }
        else {
          $requirements['islandora_riprap_microservice_available'] = [
            'title' => t("Islandora Riprap"),
            'description' => t("Riprap not found or is not running at @endpoint", ['@endpoint' => $riprap_endpoint]),
            'severity' => REQUIREMENT_ERROR,
          ];
        }
      }
    }

    if ($mode == 'local') {
      $riprap_directory = $config->get('riprap_local_directory');
      if (file_exists($riprap_directory)) {
        $requirements['riprap_directory_exists'] = [
          'title' => t("Islandora Riprap"),
          'description' => t("Riprap is installed at @directory. @chart_link.", ['@directory' => $riprap_directory, '@chart_link' => $riprap_utils->getLinkToFailedFixityEventsReport()]),
          'severity' => REQUIREMENT_INFO,
        ];
      }
      else {
        $requirements['riprap_directory_exists'] = [
          'title' => t("Islandora Riprap"),
          'description' => t("Riprap is not installed at @directory", ['@directory' => $riprap_directory]),
          'severity' => REQUIREMENT_ERROR,
        ];
      }
    }
  }

  return $requirements;
}
